{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"mainTitle\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"Slider\",\n    style: _normalizeStyle({\n      backgroundImage: 'url(' + $data.bgImage + ')',\n      backgroundSize: '100% 635px',\n      backgroundRepeat: 'no-repeat',\n      transition: 'opacity 4s ease',\n      opacity: '0.70'\n    })\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", null, _toDisplayString(_ctx.title), 1 /* TEXT */), _createElementVNode(\"h4\", null, _toDisplayString(_ctx.subtitle), 1 /* TEXT */)])])], 4 /* STYLE */);\n}","map":{"version":3,"names":["class","_createElementBlock","style","_normalizeStyle","backgroundImage","$data","bgImage","backgroundSize","backgroundRepeat","transition","opacity","_createElementVNode","_hoisted_1","_hoisted_2","_toDisplayString","_ctx","title","subtitle"],"sources":["D:\\Code\\Vue.js-study-project-BSTU\\test\\Vue.js-study-project-BSTU\\src\\components\\NewImageCarousel.vue"],"sourcesContent":["<template>\r\n    <div class=\"Slider\"\r\n        v-bind:style=\"{ backgroundImage: 'url(' + bgImage + ')', backgroundSize: '100% 635px', backgroundRepeat: 'no-repeat',  transition: 'opacity 4s ease', opacity: '0.70' }\">\r\n        <div class=\"wrapper\">\r\n          <div class=\"mainTitle\">\r\n            <h1>{{ title }}</h1>\r\n            <h4>\r\n              {{ subtitle }}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    props: {\r\n        images: {\r\n            type: Array,\r\n            default: () => []\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            bgImage: this.images[0] // начальный цвет фона\r\n        };\r\n    },\r\n    created() {\r\n        setInterval(() => {\r\n            this.bgImage = getRandomColor(this.images); // вызов функции, которая будет генерировать случайный цвет фона\r\n        }, 10000);\r\n    }\r\n};\r\n\r\nfunction getRandomColor(images) {\r\n    return images[Math.floor(Math.random() * images.length)];\r\n}\r\n</script>\r\n\r\n<style>\r\n.Slider {\r\n    background-size: cover;\r\n    height: 950px;\r\n    width: 100%;\r\n}\r\n</style>  "],"mappings":";;EAGaA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAW;;uBAH5BC,mBAAA,CAUM;IAVDD,KAAK,EAAC,QAAQ;IACRE,KAAK,EAAAC,eAAA;MAAAC,eAAA,WAA8BC,KAAA,CAAAC,OAAO;MAAAC,cAAA;MAAAC,gBAAA;MAAAC,UAAA;MAAAC,OAAA;IAAA;MACjDC,mBAAA,CAOM,OAPNC,UAOM,GANJD,mBAAA,CAKM,OALNE,UAKM,GAJJF,mBAAA,CAAoB,YAAAG,gBAAA,CAAbC,IAAA,CAAAC,KAAK,kBACZL,mBAAA,CAEK,YAAAG,gBAAA,CADAC,IAAA,CAAAE,QAAQ,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}