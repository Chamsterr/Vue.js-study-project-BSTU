{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"Slider\",\n    style: _normalizeStyle({\n      backgroundImage: 'url(' + $data.bgImage + ')'\n    })\n  }, \" 23123 \", 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","backgroundImage","$data","bgImage"],"sources":["D:\\Code\\Vue.js-study-project-BSTU\\test\\Vue.js-study-project-BSTU\\src\\components\\NewImageCarousel.vue"],"sourcesContent":["<template>\r\n    <div class=\"Slider\" v-bind:style=\"{ backgroundImage: 'url(' + bgImage + ')' }\">\r\n        23123\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    props: {\r\n        images: {\r\n            type: Array,\r\n            default: () => []\r\n        }\r\n    },\r\n    data() {\r\n    return {\r\n      bgImage: this.images[0] // начальный цвет фона\r\n    };\r\n    },\r\n    created() {\r\n        setInterval(() => {\r\n            this.bgImage = getRandomColor(images); // вызов функции, которая будет генерировать случайный цвет фона\r\n        }, 10000);\r\n    }\r\n};\r\n\r\nfunction getRandomColor(images) {\r\n    return images[Math.floor(Math.random() * images.length)];\r\n}\r\n</script>\r\n\r\n<style></style>  "],"mappings":";;uBACIA,mBAAA,CAEM;IAFDC,KAAK,EAAC,QAAQ;IAAQC,KAAK,EAAAC,eAAA;MAAAC,eAAA,WAA8BC,KAAA,CAAAC,OAAO;IAAA;KAAU,SAE/E"},"metadata":{},"sourceType":"module","externalDependencies":[]}